name: CI

on:
    push:
        branches:
            - main

jobs:
    update-md:
        name: Write Markdown
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
          - name: Run mdupdater
            run: ./.github/mdupdater.sh
            
          - name: Push markdown file to repository
            run: ./.github/commit_push.sh

    update-recent-md:
        needs: update-md
        name: Write Recent List
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
          - name: Run rmdupdater
            run: ./.github/rmdupdater.sh
            
          - name: Push txt file to repository
            run: ./.github/commit_push.sh recent

    gen-ps-badge:
        needs: update-recent-md
        name: Generate PS Badge
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
          - run: git pull origin main # guarantee a latest commit from 'update-recent-md'
          
          - name: Use Node.js
            uses: actions/setup-node@v2
            with:
              node-version: 21

          - name: Run PS badge build script
            run: node badge/build-ps-badge.js

          - name: Get current KST date
            id: date
            run: echo "date=$(TZ=Asia/Seoul date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

          - name: Commit new PS badge
            uses: EndBug/add-and-commit@v4
            with:
              author_name: Queue-ri
              author_email: qriosity.dev@gmail.com
              message: "ci: Auto build PS badge on ${{ steps.date.outputs.date }}"
              add: "badge/ps-badge.svg"
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    deploy:
        needs: update-md
        name: Trigger Deployment
        runs-on: ubuntu-latest
        environment: cloudflare-pages
        steps:
          - name: Trigger Cloudflare Pages
            uses: Cyb3r-Jak3/actions-cloudflare-pages@v1.0.1
            with:
                account: ${{ secrets.CLOUDFLARE_ID }}
                project: ${{ secrets.CLOUDFLARE_PROJECT }}
                email: ${{ secrets.CLOUDFLARE_EMAIL }}
                global_token: ${{ secrets.CLOUDFLARE_KEY }}

    wait:
        needs: deploy
        name: Wait for the Deployment
        runs-on: ubuntu-latest
        steps:
          - run: sleep 5m
            shell: bash

    docsearch-scraper:
        needs: wait
        name: Docsearch Auto Scraper
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Run docsearch scraper
              uses: darrenjennings/algolia-docsearch-action@master
              with:
                  algolia_application_id: ${{ secrets.DOCSEARCH_APP_ID }}
                  algolia_api_key: ${{ secrets.DOCSEARCH_API_KEY }}
                  file: 'algolia-config.json'
